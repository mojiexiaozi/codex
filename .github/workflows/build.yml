name: Build Qt Project
on:
  # 触发时机
  push:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.gitignore'
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.gitignore'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    # 编译矩阵策略
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019]
        qt-version: [6.2.2]
        build_type: [Debug]
    steps:
      - name: setup cmake
        uses: jwlawson/actions-setup-cmake@v2
      - name: checkout repository
        uses: actions/checkout@v4
      - name: setup Qt on Ubuntu
        if: matrix.os == 'ubuntu-20.04'
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ matrix.qt-version }}
          host: 'linux'
          target: 'desktop'
          arch: 'gcc_64'
          dir: '$HOME/Qt'
          cache: true
      - name: setup Qt on Windows
        if: matrix.os == 'windows-2019'
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ matrix.qt-version }}
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2019_64'
          dir: 'C:\\Qt'
          cache: true
      - name: Install dependencies on ubuntu
        if: matrix.os == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1-mesa-dev
      
      - name: Download 3rdparty
        if: matrix.os != 'Windows'
        run: |
          wget -O 3rdparty.zip https://github.com/mojiexiaozi/codex-3rdparty/releases/download/v1.0.0/3rdparty-${{matrix.os}}-${{matrix.build_type}}-v1.0.0.zip
      - name: Download 3rdparty Invoke-WebRequest
        if: matrix.os == 'Windows'
        run: |
          Invoke-WebRequest -Uri https://github.com/mojiexiaozi/codex-3rdparty/releases/download/v1.0.0/3rdparty-${{matrix.os}}-${{matrix.build_type}}-v1.0.0.zip -OutFile "3rdparty.zip"
      - name: Unzip file
        if: matrix.os == 'Windows'
        run: |
          Expand-Archive -Path 3rdparty.zip -DestinationPath .
      - name: Unzip file
        if: matrix.os != 'Windows'
        run: |
          unzip 3rdparty.zip

      - name: Build project
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          cmake --build build --config ${{ matrix.build_type }}

      - name: Move library files to bin directory on Ubuntu
        if: matrix.os == 'ubuntu-20.04'
        run: |
          mv build/lib build/bin/

      - name: Move library files to bin directory on Windows
        if: matrix.os == 'windows-2019'
        run: |
          Copy-Item -Path build\\lib\\${{ matrix.build_type }}\\ -Destination build\\bin\\${{ matrix.build_type }} -Recurse
      
      - name: Upload bin artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}-qt-${{ matrix.qt-version }}
          path: build/bin/